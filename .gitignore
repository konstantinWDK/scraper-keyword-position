# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pip-tools#28 and pipenv=pipenv#355, keep
#   Pipfile.lock in version control. Other configuration files
#   can be included as well.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, keep poetry.lock. See https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
# poetry.lock

# pdm
#   Similar to Pipfile.lock, keep .pdm.toml and .pdm-python and pdm.lock
.pdm.toml
.pdm-python
.pdm.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintainted in a separate JetBrains.gitignore that you can
#  find at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and also at https://www.jetbrains.com/help/idea/creating-and-managing-projects.html#project-templates
.idea/

# VSCode
.vscode/

# Emacs
*~

# Vim
# Swap
.sw[a-p]
.*.sw[a-p]
# Sessions
Session.vim
Session.vim~
# Temporary
.netrwhist
*~
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~

# SublimeText
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Operating Systems
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs2.db
ehthumbs.db
ehthumbs.db:encryptable
ehthumbs2.db
ehthumbs2.db:encryptable
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk
# macOS
.DS_Store
.AppleDouble
.LSOverride
# Icon must end with two \r
Icon

# Thumbnails
._*
# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*
# KDE directory preferences
.directory
# Linux trash folder which might appear on any partition or disk
.Trash-*
# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ===================
# PROYECTO ESPECÍFICO
# ===================

# Credenciales y configuración sensible
config/.env*
config/*.key
config/*_secret*
config/*_credentials*

# Datos de scraping (pueden contener información sensible)
data/*.csv
data/*.json
data/*_scraping*
data/*_keywords*
data/*_posiciones*
data/*_sugerencias*
!data/.gitkeep

# Logs con potencial información sensible
logs/*.log
logs/*_error.log
logs/*_debug.log
!logs/.gitkeep

# Archivos temporales de desarrollo
*.tmp
*.temp
*.bak
*.backup
*.old

# Ejecutables y binarios generados
*.exe
*.dll
*.so
*.dylib
*.pyd

# Archivos de instalación
uninstall
install
install_*

# Proyector/ejemplos que podrían contener datos reales
keywords_ejemplo.txt
proxies_gratuitos.txt
proxies_gratuitos_actualizados.txt

# Archivos de prueba con datos reales
test_*.py
*_test.py

# Documentación con datos sensibles
README_COMPLETO.md
CHANGELOG.md
CHANGELOG

# Archivos específicos de deployment
.dockerignore
Dockerfile*
docker-compose*.yml
kubernetes/
deploy/

# Archivos de CI/CD
.github/workflows/
.gitlab-ci.yml
.travis.yml
Jenkinsfile

# Archivos de monitoring y analytics
*.pid
*.seed
*.pid.lock

# Backups de base de datos
*.sql
*.sqlite
*.sqlite3
*.db

# Archivos de configuración de herramientas
.pre-commit-config.yaml
.prettierrc*
.eslintrc*
.stylelintrc*
.editorconfig
